/* -----------------------------
Display Compatibility Banner 
-------------------------------- */
.grid-compatibility {
	background-color: $red-500;
	color: $white;
	text-align: center;
	padding: 1rem;

	@supports(display: grid) { display: none; }
}

/* -----------------------------
Mixins and Utilities
-------------------------------- */

@mixin fallback-grid($percent) {
	@media #{$tablet} { 
		width: calc(#{$percent} - #{$grid-gutter}); float: left;//SAFARI 9
	} 
}

@mixin css-grid-column($span) {
	grid-column: 1 / -1; 
	@media #{$tablet} { 
		grid-column: span $span; 
		@supports(display: grid) { width: auto; }
	}
}

%wrong-grid {
	background-color: rgba(218, 61, 48, 0.5); border: 2px solid #DA3D30; border-radius: 0;
}

//Verticle Alignment
.css-grid-align-center   { align-items: center; }
.css-grid-align-top      { align-items: start; }
.css-grid-align-bottom   { align-items: end; }

//Horizontal Alignment
.css-grid-justify-center { justify-items: center; }
.css-grid-justify-left   { justify-items: start; }
.css-grid-justify-right  { justify-items: end; }

/* -----------------------------
Fallback Classes (Must be First)
-------------------------------- */
.css-grid-4 {
	.css-grid-fourth          { @include fallback-grid(25%); }
	.css-grid-half            { @include fallback-grid(50%); }
	.css-grid-three-fourths   { @include fallback-grid(75%); }
	.css-grid-full            { @include fallback-grid(100%); }
	//If wrong grid type is used, notify
	> .css-grid-sixth         { @include fallback-grid(25%); @extend %wrong-grid; }
	> .css-grid-two-thirds    { @include fallback-grid(75%); @extend %wrong-grid; }
	> .css-grid-third         { @include fallback-grid(25%); @extend %wrong-grid; }
	> .css-grid-five-sixths   { @include fallback-grid(75%); @extend %wrong-grid; }
}

.css-grid-6 {
	.css-grid-sixth           { @include fallback-grid(16.6666%); }
	.css-grid-two-thirds      { @include fallback-grid(66.6666%); }
	.css-grid-half            { @include fallback-grid(50%); }
	.css-grid-third           { @include fallback-grid(33.3333%); }
	.css-grid-five-sixths     { @include fallback-grid(83.3333%); }
	.css-grid-full            { @include fallback-grid(100%); }
	//If wrong grid type is used, notify
	> .css-grid-fourth        { @include fallback-grid(16.6666%); @extend %wrong-grid; }
	> .css-grid-three-fourths { @include fallback-grid(83.3333%); @extend %wrong-grid; }
}

/* -----------------------------
Fake "grid-gap" for Old Browsers
-------------------------------- */
.css-grid {
	.css-grid-full, .css-grid-half, .css-grid-three-fourths, .css-grid-fourth,
	.css-grid-two-thirds, .css-grid-five-sixths, .css-grid-third, .css-grid-sixth {
		//Fake grid gap on grid elements
		margin: $grid-gutter 0; 
		&:first-of-type {
			margin-top: 0;
		}
		&:last-of-type {
			margin-bottom: 0;
		}
		@media #{$tablet} { 
			margin: calc(#{$grid-gutter} / 2); 
			&:first-of-type {
				margin: calc(#{$grid-gutter} / 2); 
			}
			&:last-of-type {
				margin: calc(#{$grid-gutter} / 2); 
			}
		}//IE11 and Safari 9
		@supports(display: grid) { margin: 0; &:first-of-type { margin: 0; } &:last-of-type { margin: 0; } }//Reset for "the right" browsers ; )
	}
}

/* -----------------------------
Actual CSS Grid Classes
-------------------------------- */

.css-grid {//IE and Safari
	display: block;//For IE and Safari mobile
	overflow: auto;//For IE and Safari display
	grid-gap: $grid-gutter;
	@supports(display: grid) { display: grid; }//Reset for "the right" browsers ; )
}

.css-grid-4 { grid-template-columns: repeat(4, 1fr); &.css-grid-nested { padding: 0; } }
.css-grid-6 { grid-template-columns: repeat(6, 1fr); &.css-grid-nested { padding: 0; } }
//use .css-grid-layout when .css-grid-nested is the majority rather than adding an extra class to everything
.css-grid-layout { padding: $grid-gutter; }

.css-grid-4 {
	.css-grid-full 		      { @include css-grid-column(4); }
	.css-grid-half            { @include css-grid-column(2); }
	.css-grid-three-fourths   { @include css-grid-column(3); }
	.css-grid-fourth          { @include css-grid-column(1); }
	//If wrong grid type is used, notify
	> .css-grid-two-thirds    { @include css-grid-column(3); @extend %wrong-grid; }
	> .css-grid-five-sixths   { @include css-grid-column(3); @extend %wrong-grid; }
	> .css-grid-third         { @include css-grid-column(1); @extend %wrong-grid; }
	> .css-grid-sixth         { @include css-grid-column(1); @extend %wrong-grid; }
}

.css-grid-6 {
	.css-grid-full 		      { @include css-grid-column(6); }
	.css-grid-half            { @include css-grid-column(3); }
	.css-grid-two-thirds      { @include css-grid-column(4); }
	.css-grid-five-sixths     { @include css-grid-column(5); }
	.css-grid-third           { @include css-grid-column(2); }
	.css-grid-sixth           { @include css-grid-column(1); }
	//If wrong grid type is used, notify
	> .css-grid-three-fourths { @include css-grid-column(5); @extend %wrong-grid; }
	> .css-grid-fourth        { @include css-grid-column(1); @extend %wrong-grid; }
}

/* -----------------------------
Example App Mockups Below 
-------------------------------- */

.wrapper {
	max-width: $global-content-width;
	margin: 0 auto;
}

//For Examples:
.css-grid-highlight, .css-grid-highlight > div{ 
	background-color: rgba(221, 226, 230, 0.5);
	border: 2px solid $gray-150c; 
	border-radius: 5px;
}

.css-grid-highlight-blue, .css-grid-highlight-blue > div {
    background-color: rgba(81, 116, 186, 0.5); 
    border: 2px solid #6A8DD3;
    color: $white;
    text-align: center;
    border-radius: 5px;
}

.css-grid-highlight-red, .css-grid-highlight-red > div {
    background-color: rgba(218, 61, 48, 0.5); 
    border: 2px solid #DA3D30;
    color: $white;
    text-align: center;
    border-radius: 5px;
}

.css-grid-highlight-green, .css-grid-highlight-green > div {
    background-color: rgba(9, 170, 102, 0.5); 
    border: 2px solid #09AA66;
    color: $white;
    text-align: center;
    border-radius: 5px;
}

.mock-progress-bar  { height: 3rem; background-color: #6A8DD3;                  border-radius: 5px; }
.mock-overview      { height: 7rem; background-color: #09aa66;                  border-radius: 5px; }
.mock-parameters    { height: 5rem; background-color: #9f65ae;                  border-radius: 5px; }

.is-flex {
	display: block;

	@media #{$tablet} {
		display: flex;
		flex-direction: row;//IE11
		justify-content: space-around;//IE11
		@supports(justify-content: space-evenly) { 
			justify-content: space-evenly; 
		}
	}

	&.vertical {
		display: block;

		@media #{$tablet} {
			display: block;
			flex-direction: column;
			// align-content: space-around;//IE11
			@supports(align-content: space-evenly) {
				display: flex;
				align-content: space-evenly; 
			}
			justify-content: initial;
		}

		.card:last-of-type {
			margin-bottom: 0;
		}
	}

	.mock-key {
		height: 4rem;
		width: 5rem;
		text-align: center;

		@media #{$tablet} {
			margin: auto;//Edge
		}


		div {
			background-color: #6A8DD3;
			margin: 0 auto;
			border-radius: 50px;
			height: 1rem;
			width: 1rem;
		}
	}

	.card {
		width: 100%;
		margin: 1rem auto;
	}
}
//End Examples
